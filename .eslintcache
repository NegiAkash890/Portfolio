[{"/home/negi/Desktop/React/Portfolio/portfolio/src/index.js":"1","/home/negi/Desktop/React/Portfolio/portfolio/src/App.js":"2","/home/negi/Desktop/React/Portfolio/portfolio/src/Components/Header.js":"3","/home/negi/Desktop/React/Portfolio/portfolio/src/Components/About.js":"4","/home/negi/Desktop/React/Portfolio/portfolio/src/Components/Resume.js":"5","/home/negi/Desktop/React/Portfolio/portfolio/src/Components/Works.js":"6","/home/negi/Desktop/React/Portfolio/portfolio/src/Components/Contact.js":"7","/home/negi/Desktop/React/Portfolio/portfolio/src/Components/Footer.js":"8"},{"size":434,"mtime":1612373394277,"results":"9","hashOfConfig":"10"},{"size":452,"mtime":1612445806474,"results":"11","hashOfConfig":"10"},{"size":2081,"mtime":1614871096056,"results":"12","hashOfConfig":"10"},{"size":1647,"mtime":1614873122608,"results":"13","hashOfConfig":"10"},{"size":1808,"mtime":1614793640537,"results":"14","hashOfConfig":"10"},{"size":1170,"mtime":1614872116988,"results":"15","hashOfConfig":"10"},{"size":1049,"mtime":1613196846792,"results":"16","hashOfConfig":"10"},{"size":729,"mtime":1614793982166,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1o8wzgh",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"/home/negi/Desktop/React/Portfolio/portfolio/src/index.js",[],["36","37"],"/home/negi/Desktop/React/Portfolio/portfolio/src/App.js",[],"/home/negi/Desktop/React/Portfolio/portfolio/src/Components/Header.js",["38","39"],"import React, { useEffect, useState } from \"react\";\nimport TypeWriter from \"react-typewriter\"\n\nfunction Header() {\n  const [changeNav , setNav] = useState(\"link-list\");\n  let listener = null ;\n  useEffect(() => {\n    listener=document.addEventListener('scroll',e=>{\n      var scrolled = document.scrollingElement.scrollTop\n      if(scrolled >= 700){\n        setNav(\"link-list dark\")\n      }\n      else{\n        setNav(\"link-list\")\n      }\n    })\n    return ()=>{\n      document.removeEventListener(\"scroll\",listener)\n    }\n  }, [changeNav])\n  const name = 'Akash Negi';\n  return (\n    <div className=\"header-container\">\n      <nav className=\"navbar dark\">\n        <ul className={changeNav}>\n          <li>\n            <a href=\"#\">HOME</a>\n          </li>\n          <li>\n            <a href=\"#about\">ABOUT</a>\n          </li>\n          <li>\n            <a href=\"#resume\">RESUME</a>\n          </li>\n          <li>\n            <a href=\"#works\">WORKS</a>\n          </li>\n          <li>\n            <a href=\"#contact\">CONTACT</a>\n          </li>\n        </ul>\n      </nav>\n      <div className=\"row_banner\"> \n        <div className=\"banner-text\">\n          <h1>\n               <TypeWriter typing={0.5}>Hi I am {name}</TypeWriter>\n          </h1>\n          <p>Front End Technology Enthusiast</p>\n        </div>\n        <div className='connect'>\n          <a href='https://github.com/NegiAkash890'>\n            <i className='fa fa-github fa-2x'></i>\n          </a>\n          <a href='https://www.instagram.com/akash_negi89/'>\n              <i className='fa fa-instagram fa-2x'></i>\n          </a>\n           <a href='mailto:akash8900@gmail.com' >\n              <i className='fa fa-envelope fa-2x'></i>\n          </a>\n           <a href='https://www.linkedin.com/in/akash-negi-8900'>\n              <i className='fa fa-linkedin fa-2x'></i>\n          </a>\n        </div>\n         <div className='nav-about'>\n            <a id='top_btn' href='#about'>\n                  <i className='arrow down'></i>\n            </a>\n      </div>\n      </div>\n     \n    </div>\n  );\n}\n\nexport default Header;\n","/home/negi/Desktop/React/Portfolio/portfolio/src/Components/About.js",[],"/home/negi/Desktop/React/Portfolio/portfolio/src/Components/Resume.js",[],"/home/negi/Desktop/React/Portfolio/portfolio/src/Components/Works.js",["40","41","42"],"/home/negi/Desktop/React/Portfolio/portfolio/src/Components/Contact.js",[],"/home/negi/Desktop/React/Portfolio/portfolio/src/Components/Footer.js",[],{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","severity":1,"message":"48","line":8,"column":14,"nodeType":"49","endLine":16,"endColumn":7},{"ruleId":"50","severity":1,"message":"51","line":27,"column":13,"nodeType":"52","endLine":27,"endColumn":25},{"ruleId":"53","severity":1,"message":"54","line":11,"column":11,"nodeType":"52","endLine":11,"endColumn":79},{"ruleId":"53","severity":1,"message":"54","line":16,"column":10,"nodeType":"52","endLine":16,"endColumn":78},{"ruleId":"53","severity":1,"message":"54","line":21,"column":10,"nodeType":"52","endLine":21,"endColumn":78},"no-native-reassign",["55"],"no-negated-in-lhs",["56"],"react-hooks/exhaustive-deps","Assignments to the 'listener' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-global-assign","no-unsafe-negation"]